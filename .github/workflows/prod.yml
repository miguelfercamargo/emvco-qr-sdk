name: Production Publish

on:
  push:
    branches:
      - main

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  prepare:
    name: Prepare & Check Tag
    runs-on: ubuntu-latest
    outputs:
      tag_exists: ${{ steps.check_tag.outputs.exists }}
      version: ${{ steps.read_version.outputs.VERSION }}
    steps:
      - name: Checkout full repo (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Read version from package.json
        id: read_version
        run: |
          VERSION="v$(node -p "require('./package.json').version")"
          echo "VERSION=$VERSION"
          echo "::set-output name=VERSION::$VERSION"

      - name: Check if git tag already exists
        id: check_tag
        run: |
          if git rev-parse "${{ steps.read_version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

  publish:
    name: Publish to npm
    needs: prepare
    if: needs.prepare.outputs.tag_exists == 'false'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Create & push git tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          VERSION: ${{ needs.prepare.outputs.version }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$VERSION"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}
          git push origin "$VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.prepare.outputs.version }}
          name: Release ${{ needs.prepare.outputs.version }}
          generate_release_notes: true

      - name: Publish package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  skip-message:
    name: Skip publish because tag exists
    needs: prepare
    if: needs.prepare.outputs.tag_exists == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Already tagged
        run: |
          echo "Version ${{ needs.prepare.outputs.version }} already has a git tag. Skipping publish."
